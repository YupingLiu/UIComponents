// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
namespace MoreFun
{
    /// <summary>
    /// if the count of CountTriggerTimer is greater than its triggerCount,
    /// CountTriggerTimer will start a timer with cdSecondsAfterTrigger.
    /// 
    /// When the timer is running, countTriggerTimer.IsTriggered() returns true.
    /// 
    /// After the timer stops, countTriggerTimer will reset and IsTriggered() returns false.
    /// </summary>
    public class CountTriggerTimer
    {
        private int m_curCount = 0;
        private int m_triggerCount = 0;
        private RealTimer m_timer = new RealTimer(0, 1);

        public CountTriggerTimer()
        {
        }

        public void Create(int triggerCount, float cdSecondsAfterTrigger)
        {
#if DEV_BUILD
            this.MoreLog("triggerCount=" + triggerCount +
                         ", cdSecondsAfterTrigger=" + cdSecondsAfterTrigger);
#endif

            m_triggerCount = triggerCount;
            m_timer.Delay = cdSecondsAfterTrigger;
            m_timer.AddTimerCompleteHandler(OnTimerCompleteHandler);
        }

        public void Reset()
        {
            #if DEV_BUILD
            this.MoreLog();
            #endif

            m_curCount = 0;
            m_timer.Stop();
        }


        public void Destroy()
        {
            #if DEV_BUILD
            this.MoreLog();
            #endif
            Reset();

            m_timer.RemoveTimerCompleteHandler(OnTimerCompleteHandler);
            m_timer.Stop();
        }

        public void AddCount(int count)
        {
            #if DEV_BUILD
            this.MoreLog("count=" + count);
            #endif
            m_curCount += count;
            CheckCountTrigger();
        }

        private void CheckCountTrigger()
        {
            #if DEV_BUILD
            this.MoreLog();
            #endif
            if(m_curCount >= m_triggerCount)
            {
                #if DEV_BUILD
                this.MoreLog("timer started");
                #endif
                m_timer.Start();
            }
        }

        public bool IsTriggered()
        {
            return m_timer.IsRunning;
        }

        private void OnTimerCompleteHandler()
        {
            #if DEV_BUILD
            this.MoreLog();
            #endif
            Reset();
        }
    }
}